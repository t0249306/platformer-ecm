"use client"

import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Switch } from "@/components/ui/switch"
import { Slider } from "@/components/ui/slider"
import { useMobile } from "@/hooks/use-mobile"
import { soundManager } from "@/lib/sound-manager"
import { useEffect, useState } from "react"

interface SettingsProps {
  controlMode: "two-handed" | "one-handed"
  isFullscreen: boolean
  soundEnabled: boolean
  soundVolume: number
  onControlModeChange: () => void
  onToggleFullscreen: () => void
  onSoundEnabledChange: (enabled: boolean) => void
  onSoundVolumeChange: (volume: number) => void
  onBack: () => void
}

export default function Settings({
  controlMode,
  isFullscreen,
  soundEnabled,
  soundVolume,
  onControlModeChange,
  onToggleFullscreen,
  onSoundEnabledChange,
  onSoundVolumeChange,
  onBack,
}: SettingsProps) {
  const isMobile = useMobile()
  const [volumeValue, setVolumeValue] = useState([soundVolume * 100])

  useEffect(() => {
    soundManager.setMuted(!soundEnabled)
    soundManager.setVolume(soundVolume)
  }, [soundEnabled, soundVolume])

  useEffect(() => {
    setVolumeValue([soundVolume * 100])
  }, [soundVolume])

  const handleSoundToggle = (checked: boolean) => {
    onSoundEnabledChange(checked)
  }

  const handleVolumeChange = (value: number[]) => {
    const newVolume = value[0] / 100
    setVolumeValue(value)
    onSoundVolumeChange(newVolume)
  }

  const testSound = () => {
    soundManager.play("coin")
  }

  return (
    <Card className="w-full max-w-md mx-auto">
      <CardHeader>
        <CardTitle className="text-center">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        <div className="space-y-6">
          <div className="space-y-4">
            <h3 className="text-lg font-semibold">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h3>

            <div className="space-y-2">
              <Label className="text-sm font-medium">–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–ü–ö)</Label>
              <div className="text-sm text-muted-foreground space-y-1">
                <div>‚Ä¢ A/D –∏–ª–∏ ‚Üê/‚Üí - –¥–≤–∏–∂–µ–Ω–∏–µ</div>
                <div>‚Ä¢ –ü—Ä–æ–±–µ–ª –∏–ª–∏ W/‚Üë - –ø—Ä—ã–∂–æ–∫</div>
              </div>
            </div>

            {isMobile && (
              <div className="space-y-3">
                <Label className="text-sm font-medium">–ú–æ–±–∏–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</Label>
                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <div className="text-sm">–†–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</div>
                    <div className="text-xs text-muted-foreground">
                      {controlMode === "two-handed" ? "ü§≤ –î–≤–µ —Ä—É–∫–∏" : "üëÜ –û–¥–Ω–∞ —Ä—É–∫–∞"}
                    </div>
                  </div>
                  <Switch checked={controlMode === "one-handed"} onCheckedChange={onControlModeChange} />
                </div>
              </div>
            )}
          </div>

          <div className="space-y-4">
            <h3 className="text-lg font-semibold">–≠–∫—Ä–∞–Ω</h3>
            <div className="flex items-center justify-between">
              <div className="space-y-1">
                <Label className="text-sm font-medium">–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º</Label>
                <div className="text-xs text-muted-foreground">{isFullscreen ? "–í–∫–ª—é—á–µ–Ω" : "–í—ã–∫–ª—é—á–µ–Ω"}</div>
              </div>
              <Switch checked={isFullscreen} onCheckedChange={onToggleFullscreen} />
            </div>
          </div>

          <div className="space-y-4">
            <h3 className="text-lg font-semibold">–ó–≤—É–∫</h3>

            <div className="flex items-center justify-between">
              <div className="space-y-1">
                <Label className="text-sm font-medium">–ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã</Label>
                <div className="text-xs text-muted-foreground">{soundEnabled ? "–í–∫–ª—é—á–µ–Ω—ã" : "–í—ã–∫–ª—é—á–µ–Ω—ã"}</div>
              </div>
              <Switch checked={soundEnabled} onCheckedChange={handleSoundToggle} />
            </div>

            {soundEnabled && (
              <div className="space-y-3">
                <div className="flex items-center justify-between">
                  <Label className="text-sm font-medium">–ì—Ä–æ–º–∫–æ—Å—Ç—å</Label>
                  <span className="text-xs text-muted-foreground">{Math.round(volumeValue[0])}%</span>
                </div>
                <div className="space-y-2">
                  <Slider
                    value={volumeValue}
                    onValueChange={handleVolumeChange}
                    max={100}
                    min={0}
                    step={5}
                    className="w-full"
                  />
                  <div className="flex justify-center">
                    <Button size="sm" variant="outline" onClick={testSound} className="text-xs">
                      üîä –¢–µ—Å—Ç –∑–≤—É–∫–∞
                    </Button>
                  </div>
                </div>
              </div>
            )}
          </div>

          <div className="space-y-4">
            <h3 className="text-lg font-semibold">–ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å</h3>
            <div className="text-sm text-muted-foreground space-y-1">
              <div>‚Ä¢ –°–æ–±–µ—Ä–∏—Ç–µ –≤—Å–µ –º–æ–Ω–µ—Ç—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç–∞</div>
              <div>‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ –∫—Ä–∞—Å–Ω—ã—Ö –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π</div>
              <div>‚Ä¢ –î–æ–±–µ—Ä–∏—Ç–µ—Å—å –¥–æ –∑–µ–ª–µ–Ω–æ–≥–æ —Ñ–ª–∞–≥–∞ –¥–ª—è –ø–æ–±–µ–¥—ã</div>
            </div>
          </div>
        </div>

        <div className="mt-8">
          <Button onClick={onBack} className="w-full">
            ‚Üê –ù–∞–∑–∞–¥
          </Button>
        </div>
      </CardContent>
    </Card>
  )
}